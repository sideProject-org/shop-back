name: Deploy to AWS EC2

on:
  pull_request:
    branches:
      - master          # master 브랜치에서 PR 발생 시
  workflow_dispatch:  # 수동 실행을 허용

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    env:
      HOST: ${{ secrets.EC2_HOST }}
      USER: ${{ secrets.EC2_USER }}
      DOCKER_COMPOSE_PATH: /home/ubuntu/compose/docker-compose.yml
      IMAGE_NAME: rlaalsrl9569/shop_was
      DB_URL: ${{ secrets.DB_URL }}
      DB_USER_NAME: ${{ secrets.DB_USER_NAME }}
      DB_USER_PASSWORD: ${{ secrets.DB_USER_PASSWORD }}
      JWT_KEY: ${{ secrets.JWT_KEY }}
      A_EX_TIME: ${{ secrets.A_EX_TIME }}
      R_EX_TIME: ${{ secrets.R_EX_TIME }}
      REDIS_HOST: ${{ secrets.REDIS_HOST }}
      REDIS_PORT: ${{ secrets.REDIS_PORT }}
      SHOP_WAS_TAG: ${{ github.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set executable permission for gradlew
        run: chmod +x ./gradlew

      - name: Build project
        run: ./gradlew clean build

      - name: Build Docker image
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker build -t $IMAGE_NAME:${GITHUB_SHA} .
          docker push $IMAGE_NAME:${GITHUB_SHA}

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_KEY }}

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no $USER@$HOST "
            export cd $(dirname $DOCKER_COMPOSE_PATH) && \
            sudo docker-compose down && \
            sudo docker-compose pull && \
            sudo docker-compose up -d
          "